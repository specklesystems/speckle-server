extend type Query {
  serverInfo: ServerInfo!
}

type ServerMigration {
  movedFrom: String
  movedTo: String
}

"""
Information about this server.
"""
type ServerInfo {
  name: String!
  company: String
  description: String
  adminContact: String
  canonicalUrl: String
  termsOfService: String
  roles: [Role!]!
    @deprecated(
      reason: "Use role constants from the @speckle/shared npm package instead"
    )
  scopes: [Scope!]!
  inviteOnly: Boolean
  guestModeEnabled: Boolean!
  version: String
  serverRoles: [ServerRoleItem!]!
  """
  Base URL of Speckle Automate, if set
  """
  automateUrl: String
  """
  Server relocation / migration info
  """
  migration: ServerMigration

  """
  Whether or not to show messaging about FE2 (banners etc.)
  """
  enableNewWebUiMessaging: Boolean
}

type Role {
  name: String!
  description: String!
  resourceTarget: String!
}

type ServerRoleItem {
  id: String!
  title: String!
}

"""
Available scopes.
"""
type Scope {
  name: String!
  description: String!
}

extend type Mutation {
  serverInfoUpdate(info: ServerInfoUpdateInput!): Boolean
    @hasServerRole(role: SERVER_ADMIN)
    @hasScope(scope: "server:setup")
}

input ServerInfoUpdateInput {
  name: String!
  company: String
  description: String
  adminContact: String
  termsOfService: String
  inviteOnly: Boolean
  guestModeEnabled: Boolean
}
