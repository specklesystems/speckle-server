type AdminUserListItem {
  id: ID!
  email: String
  name: String!
  company: String
  avatar: String
  verified: Boolean
  role: String
}

type AdminUserList {
  items: [AdminUserListItem!]!
  cursor: String
  totalCount: Int!
}

type AdminInviteList {
  items: [ServerInvite!]!
  cursor: String
  totalCount: Int!
}

type ServerStatistics {
  totalProjectCount: Int!
  totalUserCount: Int!
  totalPendingInvites: Int!
}

type ProjectCollection {
  totalCount: Int!
  cursor: String
  items: [Project!]!
}

input AdminUpdateEmailVerificationInput {
  email: String!
  verified: Boolean!
}

type AdminQueries {
  userList(
    limit: Int! = 25
    cursor: String = null
    query: String = null
    role: ServerRole = null
  ): AdminUserList! @hasScope(scope: "users:read")

  inviteList(
    limit: Int! = 25
    cursor: String = null
    query: String = null
  ): AdminInviteList! @hasScope(scope: "users:invite")

  projectList(
    query: String
    orderBy: String
    visibility: String
    limit: Int! = 25
    cursor: String = null
  ): ProjectCollection!

  serverStatistics: ServerStatistics! @hasScope(scope: "server:stats")
}

type ServerAdminMutations {
  """
  A server administrator can update the verification status of an user's email.
  The server administrator is recommended to confirm ownership of the email address
  with the user before performing this action.
  """
  updateEmailVerification(input: AdminUpdateEmailVerificationInput!): Boolean!
}

extend type Query {
  admin: AdminQueries! @hasServerRole(role: SERVER_ADMIN)
}

extend type Mutation {
  admin: AdminMutations! @hasServerRole(role: SERVER_ADMIN)
}
