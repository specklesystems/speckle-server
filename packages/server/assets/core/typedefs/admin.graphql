type AdminUserListItem {
  id: ID!
  email: String
  name: String!
  bio: String
  company: String
  avatar: String
  verified: Boolean
  profiles: JSONObject
  role: String
  """
  Whether post-sign up onboarding has been finished or skipped entirely
  """
  isOnboardingFinished: Boolean @isOwner
  createdAt: DateTime @isOwner
}

type AdminUserList {
  items: [AdminUserListItem!]!
  cursor: String
  totalCount: Int!
}

type AdminInviteList {
  items: [ServerInvite!]!
  cursor: String
  totalCount: Int!
}

type ServerStatistics {
  totalProjectCount: Int!
  totalUserCount: Int!
  totalPendingInvites: Int!
}

type AdminQueries {
  userList(
    limit: Int! = 25
    cursor: String = null
    query: String = null
    role: ServerRole = null
  ): AdminUserList! @hasScope(scope: "users:read")

  inviteList(
    limit: Int! = 25
    cursor: String = null
    query: String = null
  ): AdminInviteList! @hasScope(scope: "users:invite")

  projectList(
    query: String
    orderBy: String
    visibility: String
    limit: Int! = 25
    cursor: String = null
  ): ProjectCollection!

  serverStatistics: ServerStatistics! @hasScope(scope: "server:stats")
}

extend type Query {
  admin: AdminQueries! @hasServerRole(role: SERVER_ADMIN)
}
