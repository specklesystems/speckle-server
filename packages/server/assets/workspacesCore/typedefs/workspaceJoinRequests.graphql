extend type Mutation {
  workspaceJoinRequestMutations: WorkspaceJoinRequestMutations!
    @hasServerRole(role: SERVER_GUEST)
}

input ApproveWorkspaceJoinRequestInput {
  workspaceId: String!
  userId: String!
}

input DenyWorkspaceJoinRequestInput {
  workspaceId: String!
  userId: String!
}

type WorkspaceJoinRequestMutations {
  approve(input: ApproveWorkspaceJoinRequestInput!): Boolean!
    @hasServerRole(role: SERVER_USER)
    @hasScope(scope: "workspace:update")
    @hasWorkspaceRole(role: ADMIN)
  deny(input: DenyWorkspaceJoinRequestInput!): Boolean!
    @hasServerRole(role: SERVER_USER)
    @hasScope(scope: "workspace:update")
    @hasWorkspaceRole(role: ADMIN)
}

type LimitedWorkspaceJoinRequest {
  id: String!
  workspace: LimitedWorkspace!
  user: LimitedUser!
  status: WorkspaceJoinRequestStatus!
  createdAt: DateTime!
}

type LimitedWorkspaceJoinRequestCollection {
  totalCount: Int!
  cursor: String
  items: [LimitedWorkspaceJoinRequest!]!
}

input WorkspaceJoinRequestFilter {
  status: WorkspaceJoinRequestStatus
}

extend type User {
  workspaceJoinRequests(
    filter: WorkspaceJoinRequestFilter
    cursor: String
    limit: Int! = 25
  ): LimitedWorkspaceJoinRequestCollection
    @hasServerRole(role: SERVER_GUEST)
    @hasScope(scope: "workspace:read")
}
