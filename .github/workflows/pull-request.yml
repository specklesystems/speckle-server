name: Build and Test PR

on: pull_request

jobs:
  get-version:
    outputs:
      IMAGE_VERSION_TAG: ${{ steps.step3.outputs.IMAGE_VERSION_TAG }}
    name: Get version
    runs-on: blacksmith
    defaults:
      run:
        working-directory: ./.github/workflows/scripts
    steps:
      - uses: actions/checkout@v4.2.2
      - run: chmod +x ./get_version.sh ./common.sh
      - run: ./get_version.sh
      - run: echo "IMAGE_VERSION_TAG=${result}"
      - run: echo "IMAGE_VERSION_TAG=${IMAGE_VERSION_TAG}" >> "$GITHUB_OUTPUT"

      #-  run: cat workspace/env-vars >> $BASH_EN
      # - run: echo "IMAGE_VERSION_TAG=${IMAGE_VERSION_TAG}"
  # test-viewer:
  #   name: Test Viewer
  #   runs-on: blacksmith
  #   steps:
  #     - uses: actions/checkout@v4.2.2
  #     - uses: useblacksmith/setup-node@v5
  #       with:
  #         node-version: 22
  #         cache: yarn
  #     - name: Mount NPM Cache
  #       uses: useblacksmith/stickydisk@v1
  #       with:
  #         key: ${{ github.repository }}-npm-cache
  #         path: ~/.npm
  #     - name: Mount node_modules
  #       uses: useblacksmith/stickydisk@v1
  #       with:
  #         key: ${{ github.repository }}-node-modules
  #         path: ./node_modules
  #     - name: Lint viewer
  #       run: yarn lint:ci
  #       working-directory: 'packages/viewer'
  #     - name: Run tests
  #       run: yarn test
  #       working-directory: 'packages/viewer'
  #     - name: Lint viewer-sandbox
  #       run: yarn lint:ci
  #       working-directory: 'packages/viewer-sandbox'
  #     - name: Build viewer-sandbox
  #       run: yarn build
  #       working-directory: 'packages/viewer-sandbox'

  # test-shared:
  #   name: Test Shared
  #   runs-on: blacksmith
  #   steps:
  #     - uses: actions/checkout@v4.2.2
  #     - uses: useblacksmith/setup-node@v5
  #       with:
  #         node-version: 22
  #         cache: yarn
  #     - name: Install dependencies
  #       run: PUPPETEER_SKIP_DOWNLOAD=true PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --immutable
  #     - name: Lint
  #       run: yarn lint:ci
  #       working-directory: 'packages/shared'
  #     # TODO: (codecov)
  #     - name: Build
  #       run: yarn build
  #       working-directory: 'packages/shared'
  #     - name: Ensure ESM import works
  #       run: node ./e2e/testEsm.mjs
  #       working-directory: 'packages/shared'
  #     - name: Ensure CJS require works
  #       run: node ./e2e/testCjs.cjs
  #       working-directory: 'packages/shared'

  # test-frontend-2:
  #   name: Test Frontend
  #   runs-on: blacksmith
  #   steps:
  #     - uses: actions/checkout@v4.2.2
  #     - uses: useblacksmith/setup-node@v5
  #       with:
  #         node-version: 22
  #         cache: yarn
  #     - name: Install dependencies
  #       run: PUPPETEER_SKIP_DOWNLOAD=true PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --immutable
  #     - name: Build public packages
  #       run: yarn build:public
  #     - name: Lint everything
  #       run: yarn lint:ci
  #       working-directory: 'packages/frontend-2'

  # test-objectsender:
  #   name: Test Object Sender
  #   runs-on: blacksmith
  #   steps:
  #     - uses: actions/checkout@v4.2.2
  #     - uses: useblacksmith/setup-node@v5
  #       with:
  #         node-version: 22
  #         cache: yarn
  #     - name: Install dependencies
  #       run: PUPPETEER_SKIP_DOWNLOAD=true PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --immutable
  #     - name: Build public packages
  #       run: yarn build:public
  #     - name: Lint everything
  #       run: yarn test:ci
  #       working-directory: 'packages/objectsender'
  #     # TODO: (codecov) store artifact

  # test-ui-components:
  #   name: Test UI Components
  #   runs-on: blacksmith
  #   steps:
  #     - uses: actions/checkout@v4.2.2
  #     - uses: useblacksmith/setup-node@v5
  #       with:
  #         node-version: 22
  #         cache: yarn
  #     - name: Install dependencies
  #       run: PUPPETEER_SKIP_DOWNLOAD=true yarn --immutable # we need PLAYWRIGHT
  #     - name: Build public packages
  #       run: yarn build:public
  #     - name: Lint everything
  #       run: yarn test:ci
  #       working-directory: 'packages/objectsender'
# Builds

# get_version: # maybe there is a github action / param / or we do not even need it

# # gha https://github.com/pre-commit/action

# pre-commit:

# # checks

# test-server:
# test-server-no-ff: # look for permutiations strategy metric from test-server
# test-server-multiregion: # "
# test-frontend:
# test-viewer:
# test-objectsender:
# test-shared:
# test-preview-service: # we do not have tests here at the moment
# test-ui-components:

# # gha https://www.chromatic.com/docs/github-actions/

# ui-components-chromatic: # gha https://www.chromatic.com/docs/github-actions/

# # strandalone smoke test gha docker/build-push-action  build and push to branch id location

# docker-build:

# docker-build-server:
# docker-build-frontend:
# docker-build-webhooks:
# docker-build-file-imports:
# docker-build-previews:

# docker-build-test-container:
# docker-build-postgres-container:
# docker-build-monitor-container:
# docker-build-docker-compose-ingress:

# # standalone helm check

# deployment-test-helm-chart: # there big one here without running k8
