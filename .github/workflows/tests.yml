name: Run tests

# temporarely diabled while working on the rest
on: workflow_dispatch
# on: pull_request

jobs:
  # TODO: fix, shh error on cloning helmjson schema at .helm-readme-configuration.json
  # TODO: move to blacksmith
  prepre-commit:
    name: Precommit check
    runs-on: ubuntu-latest
    container:
      image: speckle/pre-commit-runner:latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
      - name: Set precommit
        run: pre-commit install-hooks --config ./.pre-commit-config.yaml
      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=true PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --immutable
      - name: Build public packages
        run: yarn build:public
      - name: Run precommit
        run: ./.husky/pre-commit
      - name: Diff on failure
        if: failure()
        run: git --no-pager diff

  # TODO: add other env context
  test-server:
    name: Test server
    runs-on: blacksmith
    services:
      redis:
        image: redis:7.2.4
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: speckle/speckle-postgres
        env:
          POSTGRES_DB: speckle2_test
          POSTGRES_PASSWORD: speckle
          POSTGRES_USER: speckle
        ports:
          - 5432:5432
        # TODO: add it in the dockerfile as a separate mr
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      minio:
        image: bitnami/minio
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
          MINIO_SKIP_CLIENT: yes
        ports:
          - 9000:9000

    env:
      NODE_ENV: test
      POSTGRES_URL: 'postgres://speckle:speckle@localhost:5432/speckle2_test'
      POSTGRES_MAX_CONNECTIONS_SERVER: 20
      SESSION_SECRET: 'keyboard cat'
      STRATEGY_LOCAL: 'true'
      CANONICAL_URL: 'http://127.0.0.1:3000'
      S3_ENDPOINT: 'http://localhost:9000'
      S3_ACCESS_KEY: 'minioadmin'
      S3_SECRET_KEY: 'minioadmin'
      S3_BUCKET: 'speckle-server'
      S3_CREATE_BUCKET: 'true'
      REDIS_URL: 'redis://localhost:6379'
      S3_REGION: '' # optional, defaults to 'us-east-1'
      FRONTEND_ORIGIN: 'http://127.0.0.1:8081'
      ENCRYPTION_KEYS_PATH: 'test/assets/automate/encryptionKeys.json'
      ENABLE_ALL_FFS: 'true'
      RATELIMITER_ENABLED: 'false'
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 22
          cache: yarn
      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=true PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --immutable
      - name: Build public packages
        run: yarn build:public
      - run: cp .env.test-example .env.test
        working-directory: 'packages/server'
      - name: 'Lint'
        run: yarn lint:ci
        working-directory: 'packages/server'
      - name: 'Run test'
        run: yarn test:report
        working-directory: 'packages/server'
        timeout-minutes: 30
      # TODO: codecov
      - name: Introspect GQL schema for subsequent checks
        run: 'IGNORE_MISSING_MIRATIONS=true yarn cli graphql introspect'
        working-directory: 'packages/server'
      - name: Checking for GQL schema breakages against app.speckle.systems
        run: 'yarn rover graph check Speckle-Server@app-speckle-systems --schema ./introspected-schema.graphql'
        working-directory: 'packages/server'
      - name: Checking for GQL schema breakages against latest.speckle.systems
        run: 'yarn rover graph check Speckle-Server@latest-speckle-systems --schema ./introspected-schema.graphql'
        working-directory: 'packages/server'

  # TODO:
  # test-server-no-ff

  # TODO:
  # test-server-multiregion

  test-frontend-2:
    name: Test Frontend
    runs-on: blacksmith
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 22
          cache: yarn
      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=true PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --immutable
      - name: Build public packages
        run: yarn build:public
      - name: Lint everything
        run: yarn lint:ci
        working-directory: 'packages/frontend-2'

  test-viewer:
    name: Test Viwer
    runs-on: blacksmith
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 22
          cache: yarn
      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=true PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --immutable
      - name: Build public packages
        run: yarn build:public
      - name: Lint viewer
        run: yarn lint:ci
        working-directory: 'packages/viewer'
      - name: Run tests
        run: yarn test
        working-directory: 'packages/viewer'
      - name: Lint viewer-sandbox
        run: yarn lint:ci
        working-directory: 'packages/viewer-sandbox'
      - name: Build viewer-sandbox
        run: yarn build
        working-directory: 'packages/viewer-sandbox'

  # TODO
  # test-preview-service

  test-shared:
    name: Test Shared
    runs-on: blacksmith
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 22
          cache: yarn
      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=true PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --immutable
      - name: Lint
        run: yarn lint:ci
        working-directory: 'packages/shared'
      # TODO: (codecov)
      - name: Build
        run: yarn build
        working-directory: 'packages/shared'
      - name: Ensure ESM import works
        run: node ./e2e/testEsm.mjs
        working-directory: 'packages/shared'
      - name: Ensure CJS require works
        run: node ./e2e/testCjs.cjs
        working-directory: 'packages/shared'

  test-objectsender:
    name: Test Object Sender
    runs-on: blacksmith
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 22
          cache: yarn
      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=true PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --immutable
      - name: Build public packages
        run: yarn build:public
      - name: Lint everything
        run: yarn test:ci
        working-directory: 'packages/objectsender'
      # TODO: (codecov) store artifact

  test-ui-components:
    name: Test UI Components
    runs-on: blacksmith
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 22
          cache: yarn
      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=true yarn --immutable # we need PLAYWRIGHT
      - name: Build public packages
        run: yarn build:public
      - name: Lint tailwind theme
        run: yarn lint:ci
        working-directory: 'packages/tailwind-theme'
      - name: Lint ui components
        run: yarn lint:ci
        working-directory: 'packages/ui-components'
      - name: Lint component nuxt package
        run: yarn lint:ci
        working-directory: 'packages/ui-components-nuxt'
      - name: Test via Storybook
        run: yarn storybook:test:ci
        working-directory: 'packages/ui-components'

  # TODO:
  # ui-components-chromatic
