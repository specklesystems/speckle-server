version: 2.1

# TODO:
# add build workflow for frontend
# rename server test workflow
# add linting jobs
# run jobs/workflows on correct package changes (not all...)

workflows:
  test:
    jobs:
      - test_server
  deploy-latest:
    jobs:
      - docker_build_and_deploy:
          context: main-builds
          filters:
            branches:
              only: main
  deploy-prod:
    jobs:
      - docker_build_and_deploy:
          context: main-builds
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              ignore: /.*/
  ci-test:
    jobs:
      - docker_build_and_deploy:
          context: main-builds
          filters:
            branches:
              only: cristi/nonexistent

jobs:
  test_server:
    docker:
      - image: "cimg/node:16.13"
      - image: "circleci/redis:6"
      - image: "cimg/postgres:12.8"
        environment:
          POSTGRES_DB: speckle2_test
          POSTGRES_PASSWORD: speckle
          POSTGRES_USER: speckle
    environment:
      NODE_ENV: test
      DATABASE_URL: "postgres://speckle:speckle@localhost:5432/speckle2_test"
      PGDATABASE: speckle2_test
      PGUSER: speckle
      SESSION_SECRET: "keyboard cat"
      STRATEGY_LOCAL: "true"
      CANONICAL_URL: "http://localhost:3000"
    # Note: some of these commands need to be run in the server package folder.
    steps:
      - checkout
      - run:
          command: "npm install"
          working_directory: "packages/server"
      - run: "dockerize -wait tcp://localhost:5432 -timeout 1m"
      - run:
          command: "npm run test:report"
          working_directory: "packages/server"
      - run:
          command: "bash <(curl -s https://codecov.io/bash)"
          working_directory: "packages/server"

      - store_test_results:
          path: packages/server/reports

      - store_artifacts:
          path: packages/server/reports/test-results.xml

  docker_build_and_deploy:
    docker:
      - image: circleci/python:3.6-buster
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
      - run:
          name: Build Frontend
          command: env SPECKLE_SERVER_PACKAGE=frontend ./.circleci/build.sh
      - run:
          name: Build Server
          command: env SPECKLE_SERVER_PACKAGE=server ./.circleci/build.sh
      - run:
          name: Build Object Preview Service
          command: env SPECKLE_SERVER_PACKAGE=preview-service ./.circleci/build.sh
      - run:
          name: Build Webhook Service
          command: env SPECKLE_SERVER_PACKAGE=webhook-service ./.circleci/build.sh
      - run:
          name: Build FileImport Service
          command: env SPECKLE_SERVER_PACKAGE=fileimport-service ./.circleci/build.sh

      - add_ssh_keys:
          fingerprints:
            - "18:74:c4:b9:dc:66:b2:66:1d:81:56:0d:0a:87:9b:b1"
      - run:
          name: Publish Helm Chart
          command: ./.circleci/publish_helm_chart.sh

      - run:
          name: Deploy
          command: |
            ./.circleci/deploy.sh
            RELEASE_VERSION=$(./.circleci/get_version.sh)
            if [[ "$RELEASE_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              env K8S_CLUSTER=TOR1 K8S_NAMESPACE=${K8S_NAMESPACE_TOR1_1_RELEASE} ./.circleci/deploy_in_new_setup.sh
              env K8S_CLUSTER=LON1 K8S_NAMESPACE=${K8S_NAMESPACE_LON1_1_RELEASE} ./.circleci/deploy_in_new_setup.sh
              env K8S_CLUSTER=LON1 K8S_NAMESPACE=${K8S_NAMESPACE_LON1_2_RELEASE} ./.circleci/deploy_in_new_setup.sh
              env K8S_CLUSTER=AMS3 K8S_NAMESPACE=${K8S_NAMESPACE_AMS3_1_RELEASE} ./.circleci/deploy_in_new_setup.sh
            else
              env K8S_CLUSTER=TOR1 K8S_NAMESPACE=${K8S_NAMESPACE_TOR1_1_LATEST} ./.circleci/deploy_in_new_setup.sh
              env K8S_CLUSTER=LON1 K8S_NAMESPACE=${K8S_NAMESPACE_LON1_2_LATEST} ./.circleci/deploy_in_new_setup.sh
              env K8S_CLUSTER=LON1 K8S_NAMESPACE=${K8S_NAMESPACE_LON1_3_LATEST} ./.circleci/deploy_in_new_setup.sh
              env K8S_CLUSTER=LON1 K8S_NAMESPACE=${K8S_NAMESPACE_LON1_4_LATEST} ./.circleci/deploy_in_new_setup.sh
              env K8S_CLUSTER=AMS3 K8S_NAMESPACE=${K8S_NAMESPACE_AMS3_1_LATEST} ./.circleci/deploy_in_new_setup.sh
            fi
      - run:
          name: Test deployment
          command: |
            ./utils/test-deployment/install_prerequisites.sh
            RELEASE_VERSION=$(./.circleci/get_version.sh)
            if [[ "$RELEASE_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              ./utils/test-deployment/run_tests.py https://speckle.xyz
              ./utils/test-deployment/run_tests.py ${SPECKLE_URL_TOR1_1_RELEASE}
            else
              ./utils/test-deployment/run_tests.py https://latest.speckle.dev
              ./utils/test-deployment/run_tests.py ${SPECKLE_URL_TOR1_1_LATEST}
            fi
