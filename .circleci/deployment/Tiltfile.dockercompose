print('ðŸš€ Deploying Speckle Server into Docker via Tilt...')

symbols = None
IS_CI = os.getenv('CI', "false") == "true"
if IS_CI:
  symbols = load_dynamic('./Tiltfile.ci')
else:
  symbols = load_dynamic('./Tiltfile.local')

# Prepare the Speckle images
# (loads the images from tgz file if CI, otherwise builds them or pulls them from remote as a fallback on non-amd64 machines)
speckle_image = symbols['speckle_image']
speckle_image('fileimport-service')
speckle_image('frontend-2')
speckle_image('docker-compose-ingress')
# speckle_image('monitor-deployment')
speckle_image('preview-service')
speckle_image('server')
speckle_image('test-deployment')
speckle_image('webhook-service')

# Prepare the dependencies
docker_compose('../../docker-compose-deps.yml')
dc_resource('postgres', labels=['dependencies'])
dc_resource('redis', labels=['dependencies'])
dc_resource('minio', labels=['dependencies'])
dc_resource('maildev', labels=['dependencies'])
dc_resource('postgres', labels=['dependencies'])

# Prepare the Speckle resources
docker_compose(['../../docker-compose-speckle.yml', encode_yaml({'services': {'speckle-server': {'environment': {'ENABLE_MP': 'false'}}}})])
dc_resource('speckle-server', resource_deps=['postgres', 'redis', 'minio', 'maildev'], labels=['speckle'])
dc_resource('speckle-frontend-2', resource_deps=[], labels=['speckle'])
dc_resource('speckle-ingress', resource_deps=[], labels=['speckle'])
dc_resource('preview-service', resource_deps=['postgres'], labels=['speckle'])
dc_resource('fileimport-service', resource_deps=[], labels=['speckle'])
dc_resource('webhook-service', resource_deps=['postgres'], labels=['speckle'])

# Test the Speckle resources
docker_compose('../../docker-compose-test.yml')
dc_resource('test', resource_deps=['speckle-server', 'speckle-frontend-2'], labels=['test']) # --exit-code-from test
