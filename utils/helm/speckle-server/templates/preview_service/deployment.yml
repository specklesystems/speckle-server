apiVersion: apps/v1
kind: Deployment
metadata:
  name: speckle-preview-service
  namespace: {{ .Values.namespace }}
  labels:
{{ include "preview_service.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.preview_service.replicas }}
  selector:
    matchLabels:
      app: speckle-preview-service
      project: speckle-server
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
{{ include "preview_service.labels" . | indent 8 }}
    spec:
      containers:
      - name: main
        image: speckle/speckle-preview-service:{{ .Values.docker_image_tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}

        ports:
          - name: metrics
            containerPort: 9094
            protocol: TCP

        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 60
          exec:
            command:
              - node
              - -e
              - process.exit(Date.now() - require('fs').readFileSync('/tmp/last_successful_query', 'utf8') > 3600 * 1000)

        resources:
          requests:
            cpu: {{ .Values.preview_service.requests.cpu }}
            memory: {{ .Values.preview_service.requests.memory }}
          limits:
            cpu: {{ .Values.preview_service.limits.cpu }}
            memory: {{ .Values.preview_service.limits.memory }}

        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 20000

        volumeMounts:
          - mountPath: /tmp
            name: tmp
        {{- if .Values.db.useCertificate }}
          - name: postgres-certificate
            mountPath: /postgres-certificate
        {{- end }}

        env:
          - name: PG_CONNECTION_STRING
            valueFrom:
              secretKeyRef:
                name: {{ default .Values.secretName .Values.db.connectionString.secretName }}
                key: {{ default "postgres_url" .Values.db.connectionString.secretKey }}

          - name: LOG_LEVEL
            value: {{ .Values.preview_service.logLevel | quote }}

          {{- if .Values.db.useCertificate }}
          - name: NODE_EXTRA_CA_CERTS
            value: "/postgres-certificate/ca-certificate.crt"
          {{- end }}

      {{- if .Values.preview_service.affinity }}
      affinity: {{- include "speckle.renderTpl" (dict "value" .Values.preview_service.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.preview_service.nodeSelector }}
      nodeSelector: {{- include "speckle.renderTpl" (dict "value" .Values.preview_service.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.preview_service.tolerations }}
      tolerations: {{- include "speckle.renderTpl" (dict "value" .Values.preview_service.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.preview_service.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "speckle.renderTpl" (dict "value" .Values.preview_service.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      priorityClassName: low-priority
      {{- if .Values.preview_service.serviceAccount.create }}
      serviceAccountName: {{ include "preview_service.name" $ }}
      {{- end }}

      securityContext:
        runAsNonRoot: true
        runAsUser: 20000
        fsGroup: 25000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 30000
        seccompProfile:
          type: RuntimeDefault

      # Should be > preview generation time ( 1 hour for good measure )
      terminationGracePeriodSeconds: 3600

      volumes:
        - name: tmp
          emptyDir: {}
      {{- if .Values.db.useCertificate }}
        - name: postgres-certificate
          configMap:
            name: postgres-certificate
      {{- end }}
